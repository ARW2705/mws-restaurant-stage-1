"use strict";importScripts("/js/idb.js");var cacheBaseName="restaurant-reviews",cacheStatic=cacheBaseName+"-static",cacheImages=cacheBaseName+"-images",version="v1.0.0",initComplete=!1,queueId=0,dbPromise=idb.open("restaurantDB",3,function(e){switch(e.oldVersion){case 0:e.createObjectStore("restaurants",{keyPath:"id"});case 1:e.createObjectStore("reviews",{keyPath:"id"});case 2:e.createObjectStore("pendingQueue",{keyPath:"queueId"})}});self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheStatic+"-"+version).then(function(e){return e.addAll(["/","index.html","restaurant.html","css/styles.css","js/idb.js","js/dbhelper.js","js/main.js","js/restaurant_info.js","img/icons/restaurant-icon-sm.png","img/map/staticmap.webp","img/map/staticmap.png"])}))});var createRoutingObject=function(e){var t=-1,n=new URL(e.request.url),r=e.request.referrer;if(-1!=r.indexOf("restaurant.html")){var a=r.indexOf("=")+1;t=parseInt(r.slice(a))}var i=e.request.method.toUpperCase();return{url:n,port:n.port,id:t,method:i}},handleDBGetRequest=function(e,t){var n=e.request.url,r=new URL(e.request.url),a=r.pathname.substring(1,r.pathname.length);"restaurants"==a&&-1!=t&&(n=e.request.url+"/"+t);var i=new Headers,s=!0,o=!1,u=void 0;try{for(var c,d=e.request.headers.entries()[Symbol.iterator]();!(s=(c=d.next()).done);s=!0){var h=c.value;i.append(h[0],h[1])}}catch(e){o=!0,u=e}finally{try{!s&&d.return&&d.return()}finally{if(o)throw u}}i.append("content-type","application/json");var f=new Request(n,{method:e.request.method,headers:i,body:e.request.body,referrer:e.request.referrer,referrerPolicy:e.request.referrerPolicy,mode:e.request.mode,credentials:e.request.credentials,cache:e.request.cache,redirect:e.request.redirect,integrity:e.request.integrity});e.respondWith(dbPromise.then(function(n){return n.transaction(a).objectStore(a).getAll().then(function(e){return"restaurants"==a&&-1!=t&&e&&e.length?e.find(function(e){return e.id==t}):initComplete&&e&&e.length?e:fetch(f).then(function(e){return e.json()}).then(function(e){var t=n.transaction(a,"readwrite").objectStore(a);return Array.isArray(e)?(initComplete=!0,e.forEach(function(e){t.put(e)})):t.put(e),e}).catch(function(e){return console.log("DB fetch event failed",e)})}).then(function(e){return new Response(JSON.stringify(e))}).catch(function(e){return console.log("DB fetch failed",e)})}))},handleDBChangeRequest=function(t,e){var n=new URL(t.request.url),s=t.request.method,r=n.pathname.substring(1,n.pathname.length),o=r.includes("/")?r.split("/")[0]:r,u=n.search,a=t.request.clone();t.respondWith(dbPromise.then(function(e){var i=parseInt(r.split("/")[1]);return"POST"==s||"PUT"==s?t.request.json().then(function(t){var n={},r=e.transaction(o,"readwrite").objectStore(o);if(""!=u){var a=new URLSearchParams(u.substring(1)).get("is_favorite");return r.get(i).then(function(e){return e.is_favorite=a,r.put(e),(n=e).type="PUT restaurants",n})}return"PUT"==s?r.get(i).then(function(e){return e.comments=t.comments,e.name=t.name,e.rating=t.rating,e.updatedAt=t.updatedAt,r.put(e),(n=e).type="PUT reviews",n}):"POST"==s?(r.put(t),(n=t).type="POST reviews",n):void 0}):(e.transaction(o,"readwrite").objectStore(o).delete(i),{id:i,type:"DELETE reviews"})}).then(function(t){return fetch(a).then(function(e){return e}).catch(function(e){return addToPendingQueue(t),new Response(JSON.stringify(t||{}))})}))},addToPendingQueue=function(s){dbPromise.then(function(e){var t=e.transaction("pendingQueue","readwrite").objectStore("pendingQueue"),n=s.type.split(" ");delete s.type;var r=n[0],a=n[1],i={queueId:queueId,method:r,route:a,data:s};queueId++,t.put(i)})},getNextPending=function e(){attemptPendingSubmission(e)},attemptPendingSubmission=function(u){dbPromise.then(function(o){o.transaction("pendingQueue","readwrite").objectStore("pendingQueue").openCursor().then(function(e){if(e){var t=e.value,n=t.route,r=t.data.id,a=t.data.is_favorite,i="http://localhost:1337/"+n;void 0!==r&&"POST"!==t.method&&(i+="/"+r),void 0!==a&&(i+="/?is_favorite="+a);var s=new Headers;s.append("content-type","application/json"),fetch(i,{method:t.method,body:JSON.stringify(t.data),header:s}).then(function(e){!e||200!=e.status&&201!=e.status||o.transaction("pendingQueue","readwrite").objectStore("pendingQueue").openCursor().then(function(e){e.delete().then(function(){return u()})})}).catch(function(e){return console.log("Could not sync record")})}})})},handleAssetRequest=function(a){a.respondWith(caches.match(a.request,{ignoreSearch:!0}).then(function(e){if(e)return e;var r=a.request.clone();return fetch(r).then(function(e){if(!e||200!==e.status||"basic"!==e.type)return e;var t=e.clone(),n=("image"===r.destination?cacheImages:cacheStatic)+"-"+version;return caches.open(n).then(function(e){e.put(a.request,t)}).catch(function(e){return console.log("Cache error",e)}),e})}).catch(function(e){return console.log("Cache fetch error",e)}))};self.addEventListener("fetch",function(e){var t=createRoutingObject(e);"1337"==t.port?"GET"==t.method?handleDBGetRequest(e,t.id):handleDBChangeRequest(e,t.id):"8000"!=t.port&&"3000"!=t.port||handleAssetRequest(e)}),self.addEventListener("activate",function(e){e.waitUntil(caches.keys().then(function(e){return Promise.all(e.filter(function(e){return e.startsWith(cacheBaseName)&&!e.endsWith(version)}).map(function(e){return caches.delete(e)}))}).catch(function(e){return console.log("uh-oh",e)}))}),self.addEventListener("message",function(e){"attempt-pending-submission"==e.data&&getNextPending()});