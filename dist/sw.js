"use strict";importScripts("/js/idb.js");var cacheBaseName="restaurant-reviews",cacheStatic=cacheBaseName+"-static",cacheImages=cacheBaseName+"-images",version="v1.0.0",initComplete=!1,dbPromise=idb.open("restaurantDB",2,function(e){switch(e.oldVersion){case 0:e.createObjectStore("restaurants",{keyPath:"id"});case 1:e.createObjectStore("reviews",{keyPath:"id"})}});self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheStatic+"-"+version).then(function(e){return e.addAll(["/","index.html","restaurant.html","css/styles.css","js/idb.js","js/dbhelper.js","js/main.js","js/restaurant_info.js","img/icons/restaurant-icon-sm.png","img/map/staticmap.webp","img/map/staticmap.png"])}))});var createRoutingObject=function(e){var t=-1,n=new URL(e.request.url),r=e.request.referrer;if(-1!=r.indexOf("restaurant.html")){var s=r.indexOf("=")+1;t=parseInt(r.slice(s))}var o=e.request.method.toUpperCase();return{url:n,port:n.port,id:t,method:o}},handleDBGetRequest=function(e,t){var n=e.request.url;console.log(e.request);var r=new URL(e.request.url),s=r.pathname.substring(1,r.pathname.length);"restaurants"==s&&-1!=t&&(n=e.request.url+"/"+t);var o=new Headers,a=!0,c=!1,i=void 0;try{for(var u,l=e.request.headers.entries()[Symbol.iterator]();!(a=(u=l.next()).done);a=!0){var h=u.value;o.append(h[0],h[1])}}catch(e){c=!0,i=e}finally{try{!a&&l.return&&l.return()}finally{if(c)throw i}}o.append("content-type","application/json");var d=new Request(n,{method:e.request.method,headers:o,body:e.request.body,referrer:e.request.referrer,referrerPolicy:e.request.referrerPolicy,mode:e.request.mode,credentials:e.request.credentials,cache:e.request.cache,redirect:e.request.redirect,integrity:e.request.integrity});e.respondWith(dbPromise.then(function(n){return n.transaction(s).objectStore(s).getAll().then(function(e){return"restaurants"==s&&-1!=t&&e&&e.length?e.find(function(e){return e.id==t}):initComplete&&e&&e.length?e:fetch(d).then(function(e){return e.json()}).then(function(e){var t=n.transaction(s,"readwrite").objectStore(s);return Array.isArray(e)?(initComplete=!0,e.forEach(function(e){t.put(e)})):t.put(e),e}).catch(function(e){return console.log("DB fetch event failed",e)})}).then(function(e){return new Response(JSON.stringify(e))}).catch(function(e){return console.log("DB fetch failed",e)})}))},handleDBChangeRequest=function(e,t){console.log(e.request);var n=new URL(e.request.url);console.log(n);var r=n.pathname.substring(1,n.pathname.length);r.includes("/")&&(r=r.split("/")[0]),console.log(r);var s=n.searchParams;console.log(s);var o=e.request.method;e.respondWith(fetch(e.request).then(function(e){if(console.log("handleDBChangeRequest fetch finished"),"POST"==o&&201==e.status||"PUT"==o&&200==e.status)return e.json().then(function(t){return dbPromise.then(function(e){return console.log("writing to idb",t),e.transaction(r,"readwrite").objectStore(r).put(t),t}).catch(function(e){return console.log(r+" idb error",e)})}).catch(function(e){return console.log(r+" post response parse error",e)});console.log("post failed with status",e.status,e.statusText)}).then(function(e){return new Response(JSON.stringify(e))}).catch(function(e){return console.log("reviews post request error",e)}))},handleAssetRequest=function(s){s.respondWith(caches.match(s.request,{ignoreSearch:!0}).then(function(e){if(e)return e;var r=s.request.clone();return fetch(r).then(function(e){if(!e||200!==e.status||"basic"!==e.type)return e;var t=e.clone(),n=("image"===r.destination?cacheImages:cacheStatic)+"-"+version;return caches.open(n).then(function(e){e.put(s.request,t)}).catch(function(e){return console.log("Cache error",e)}),e})}).catch(function(e){return console.log("Cache fetch error",e)}))};self.addEventListener("fetch",function(e){var t=createRoutingObject(e);"1337"==t.port?"GET"==t.method?handleDBGetRequest(e,t.id):(console.log(t.method+" request made by "+t.url),handleDBChangeRequest(e,t.id)):"8000"==t.port&&handleAssetRequest(e)}),self.addEventListener("activate",function(e){e.waitUntil(caches.keys().then(function(e){return Promise.all(e.filter(function(e){return e.startsWith(cacheBaseName)&&!e.endsWith(version)}).map(function(e){return caches.delete(e)}))}).catch(function(e){return console.log("uh-oh",e)}))}),self.addEventListener("sync",function(e){"bg-sync"===e.tag&&console.log("sync event")}),self.addEventListener("error",function(e){console.log("SW error",e)});